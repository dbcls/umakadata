- measurements = evaluation.measurements

.table-wrapper.table-responsive
  table#evaluation.table.table-bordered.evaluation
    thead
      tr
        th Area
        th colspan=2 Name
        th Value
        th
    tbody
      /
      / Availability
      /
      tr class=class_for_criteria(evaluation.availability)
        td Availability (#{format('%.1f', evaluation.availability)})
        td colspan=2
          | Alive (Alive Score)
          .umakadata-tooltip
            span.medium
              | Alive monitoring score that takes the value from 0 to 100.
                If the crawler fails to access the endpoint, the score drops from the previous score day by day.
                If the crawler successfully accesses to the endpoint, the score rises day by day based on the previous score.
        td #{evaluation.alive}
        td.text-center
          - if measurements.find { |x| x.name == 'availability.alive' }.present?
            = link_to endpoint_log_path(id: endpoint.id, name: 'alive', date: date), target: '_blank' do
              i.fa.fa-file-text-o

      /
      / Freshness
      /
      tr class=class_for_criteria(evaluation.freshness)
        td Freshness (#{format('%.1f', evaluation.freshness)})
        td colspan=2
          | Last Updated
          .umakadata-tooltip
            span.medium
              | The last updated date.
              br
              | The date in Service Description or VoID are taken, if any.
        td= evaluation.last_updated.presence || "N/A"
        td.text-center
          - if measurements.find { |x| x.name == 'freshness.last_updated' }.present?
            = link_to endpoint_log_path(id: endpoint.id, name: 'last_updated', date: date), target: '_blank' do
              i.fa.fa-file-text-o

      /
      / Operation
      /
      tr class=class_for_criteria(evaluation.operation)
        td rowspan=2 Operation (#{format('%.1f', evaluation.operation)})
        td colspan=2
          | Service Description
          .umakadata-tooltip
            span.medium
              | True if Service Description can be retrieved as turtle or rdf+xml, otherwise false.
        td= evaluation.service_description
        td.text-center
          - if measurements.find { |x| x.name == 'operation.service_description' }.present?
            = link_to endpoint_log_path(id: endpoint.id, name: 'service_description', date: date), target: '_blank' do
              i.fa.fa-file-text-o

      tr class=class_for_criteria(evaluation.operation)
        td colspan=2
          | VoID
          .umakadata-tooltip
            span.medium
              | True if VoID can be found on well-known URI, otherwise false.
        td= evaluation.void
        td.text-center
          - if measurements.find { |x| x.name == 'operation.void' }.present?
            = link_to endpoint_log_path(id: endpoint.id, name: 'void', date: date), target: '_blank' do
              i.fa.fa-file-text-o

      /
      / Usefulness
      /
      tr class=class_for_criteria(evaluation.usefulness)
        td rowspan=8 Usefulness (#{format('%.1f', evaluation.usefulness)})

      tr class=class_for_criteria(evaluation.usefulness)
        td colspan=2
          | Metadata
          .umakadata-tooltip
            span.medium
              | This value shows how much metadata can be retrieved using the specified SPARQL query.
              br
              | Zero if any graph information can be retrieved.
              br
              | For each graph, we score the status by retrieving classes, labels, properties and datatypes.
                The average of the scores are shown.
              br
              | Please see the following pages for more details:
              br
              a href="http://www.sparqlbuilder.org/doc/sparql-queries-for-sparql-builder-metadata/"
                | http://www.sparqlbuilder.org/doc/sparql-queries-for-sparql-builder-metadata/
        td= evaluation.metadata.present? ? format('%.1f', evaluation.metadata) : 'N/A'
        td.text-center
          - if measurements.find { |x| x.name == 'usefulness.metadata' }.present?
            = link_to endpoint_log_path(id: endpoint.id, name: 'metadata', date: date), target: '_blank' do
              i.fa.fa-file-text-o

      tr class=class_for_criteria(evaluation.usefulness)
        td colspan=2
          | Ontology
          .umakadata-tooltip
            span.medium
              | This value shows how the endpoint uses common ontologies.
                We calculate the value as the average of the rate of the ontologies used in properties in metadata for each graph.
              br
              | Please see also the following pages:
              br
              a href="http://lov.okfn.org/dataset/lov"
                | http://lov.okfn.org/dataset/lov
              br
              a href="http://stats.lod2.eu/vocabularies"
                | http://stats.lod2.eu/vocabularies
        td= evaluation.ontology.present? ? format('%.1f', evaluation.ontology) : 'N/A'
        td.text-center
          - if measurements.find { |x| x.name == 'usefulness.ontology' }.present?
            = link_to endpoint_log_path(id: endpoint.id, name: 'ontology', date: date), target: '_blank' do
              i.fa.fa-file-text-o

      tr class=class_for_criteria(evaluation.usefulness)
        td colspan=2
          | Links to Other Dataset
          .umakadata-tooltip
            span.medium
              | List of datasets specified by void:Linkset in VoID
        td
          - if evaluation.links_to_other_datasets.present?
            ul
              - evaluation.links_to_other_datasets.each do |x|
                li= x
          - else
            = 'N/A'
        td.text-center

      tr class=class_for_criteria(evaluation.usefulness)
        td colspan=2
          | Data Entry
          .umakadata-tooltip
            span.medium
              | Number of statements in the endpoint.
        td= evaluation.data_entry.present? ? number_with_delimiter(evaluation.data_entry) : 'N/A'
        td.text-center
          - if measurements.find { |x| x.name == 'usefulness.data_entry' }.present?
            = link_to endpoint_log_path(id: endpoint.id, name: 'data_entry', date: date), target: '_blank' do
              i.fa.fa-file-text-o

      tr class=class_for_criteria(evaluation.usefulness)
        td colspan=2
          | Support for HTML Data Format
          .umakadata-tooltip
            span.medium
              | True if the endpoint returns a response in HTML format, otherwise false.
        td= evaluation.support_html_format
        td.text-center
          - if measurements.find { |x| x.name == 'usefulness.support_html_format' }.present?
            = link_to endpoint_log_path(id: endpoint.id, name: 'support_html_format', date: date), target: '_blank' do
              i.fa.fa-file-text-o

      tr class=class_for_criteria(evaluation.usefulness)
        td colspan=2
          | Support for Turtle Data Format
          .umakadata-tooltip
            span.medium
              | True if the endpoint returns a response in Turtle format, otherwise false.
        td= evaluation.support_turtle_format
        td.text-center
          - if measurements.find { |x| x.name == 'usefulness.support_turtle_format' }.present?
            = link_to endpoint_log_path(id: endpoint.id, name: 'support_turtle_format', date: date), target: '_blank' do
              i.fa.fa-file-text-o

      tr class=class_for_criteria(evaluation.usefulness)
        td colspan=2
          | Support for RDF/XML Data Format
          .umakadata-tooltip
            span.medium
              | True if the endpoint returns a response in RDF/XML format, otherwise false.
        td= evaluation.support_rdfxml_format
        td.text-center
          - if measurements.find { |x| x.name == 'usefulness.support_rdfxml_format' }.present?
            = link_to endpoint_log_path(id: endpoint.id, name: 'support_rdfxml_format', date: date), target: '_blank' do
              i.fa.fa-file-text-o

      /
      / Validity
      /
      tr class=class_for_criteria(evaluation.validity)
        td rowspan=5 Validity (#{format('%.1f', evaluation.validity)})
        td rowspan=4
          | 4 Principles of Linked Data
          .umakadata-tooltip
            span.medium
              | This shows how much the endpoint follows the four principles of Linked Data:
              ul
                li
                  | Use URIs as names for things
                li
                  | Use HTTP URIs so that people can look up those names.
                li
                  | When someone looks up a URI, provide useful information, using the standards (RDF*, SPARQL)
                li
                  | Include links to other URIs. so that they can discover more things.
              | Please see the following page for more details:
              br
              a href="https://www.w3.org/DesignIssues/LinkedData.html"
                | https://www.w3.org/DesignIssues/LinkedData.html
        td
          | URIs are used as names?
          .umakadata-tooltip
            span.small
              | Always true, because this is mandatory if the target data is RDF and it does not affect Umakadata score.
        td= true
        td.text-center

      tr class=class_for_criteria(evaluation.validity)
        td
          | HTTP URIs are used?:
          .umakadata-tooltip
            span.small
              | True if all the subjects are HTTP URI, otherwise false. Blank nodes can be a subject, but not all of them.
        td= evaluation.http_uri.nil? ? 'N/A' : evaluation.http_uri
        td.text-center
          - if measurements.find { |x| x.name == 'validity.http_uri' }.present?
            = link_to endpoint_log_path(id: endpoint.id, name: 'http_uri', date: date), target: '_blank' do
              i.fa.fa-file-text-o

      tr class=class_for_criteria(evaluation.validity)
        td
          | URI provides useful information?:
          .umakadata-tooltip
            span.small
              | True if the endpoint returns some data when issuing a GET request to an HTTP URI of a subject, otherwise false.
        td= evaluation.provide_useful_information.nil? ? 'N/A' : evaluation.provide_useful_information
        td.text-center
          - if measurements.find { |x| x.name == 'validity.provide_useful_information' }.present?
            = link_to endpoint_log_path(id: endpoint.id, name: 'provide_useful_information', date: date), target: '_blank' do
              i.fa.fa-file-text-o

      tr class=class_for_criteria(evaluation.validity)
        td
          | Include links to other URIs?:
          .umakadata-tooltip
            span.small
              | True if the endpoint contains owl:sameAs or rdf:seeAlso dataset, otherwise false.
        td= evaluation.link_to_other_uri.nil? ? 'N/A' : evaluation.link_to_other_uri
        td.text-center
          - if measurements.find { |x| x.name == 'validity.link_to_other_uri' }.present?
            = link_to endpoint_log_path(id: endpoint.id, name: 'link_to_other_uri', date: date), target: '_blank' do
              i.fa.fa-file-text-o

      tr class=class_for_criteria(evaluation.validity)
        td colspan=2
          | Cool URI
          .umakadata-tooltip
            span.medium
              | We score the cool URI according 4 criteria:
              ul
                li the address of the endpoint is represented using host name not IP address.
                li the endpoint should listen to 80 port.
                li the URI of the endpoint does not contain URL parameters.
                li the length of the URI is less than 30 characters.
              | Please see the following pages for more details:
              ul
                li= link_to 'https://www.w3.org/TR/cooluris/'
                li= link_to 'http://patterns.dataincubator.org/book/identifier-patterns.html'
        td= evaluation.cool_uri.present? ? format('%.1f', evaluation.cool_uri) : 'N/A'
        td.text-center
          - if measurements.find { |x| x.name == 'validity.cool_uri' }.present?
            = link_to endpoint_log_path(id: endpoint.id, name: 'cool_uri', date: date), target: '_blank' do
              i.fa.fa-file-text-o

      tr class=class_for_criteria(evaluation.performance)
        td
          | Performance (#{format('%.1f', evaluation.performance)})
          - unless evaluation.data_scale.blank?
            - if evaluation.data_scale < 7
              span.dataset-scale data-icon='small'
              .umakadata-tooltip
                span.small
                  | This icon indicates the database is small scale. (Data Scale &lt; 7.0)
            - elsif evaluation.data_scale < 9
              span.dataset-scale data-icon='medium'
              .umakadata-tooltip
                span.small
                  | This icon indicates the database is medium scale. (7.0 &le; Data Scale &lt; 9.0)
            - elsif evaluation.data_scale < 11
              span.dataset-scale data-icon='large'
              .umakadata-tooltip
                span.small
                  | This icon indicates the database is large scale. (9.0 &le; Data Scale &lt; 11.0)
            - elsif evaluation.data_scale >= 11
              span.dataset-scale data-icon='xlarge'
              .umakadata-tooltip
                span.small
                  | This icon indicates the database is extra large scale. (11.0 &le; Data Scale)
        td
          | Execution Time
          .umakadata-tooltip
            span.medium
              | This value represents the processing performance.
                It is calculated as a difference of the response time retrieving the number of classes query from its ASK{} query.
                The final value is obtained by averaging over the results taken by three times.
        td
        td
          = evaluation.execution_time.present? ? format('%.3f', evaluation.execution_time) : 'N/A'
        td.text-center
          - if measurements.find { |x| x.name == 'performance.execution_time' }.present?
            = link_to endpoint_log_path(id: endpoint.id, name: 'execution_time', date: date), target: '_blank' do
              i.fa.fa-file-text-o
